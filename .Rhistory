group_by(cluster) %>%
summarize(ATH_numOMG = n_distinct(Orthogroup))
Rice_cluster_numOMG = Oryza_MG_OG[Oryza_MG_OG$cluster %in%  c("Xylem", "Cortex", "Cortex_like", "Hair1",
"Hair2", "Nonhair",  "Endodermis",
"Meristem", "Phloem", "Stele"), ] %>%
group_by(cluster) %>%
summarize(Rice_numOMG = n_distinct(Orthogroup))
##
extractTable = merge(merge(df1, Ath_cluster_numOMG, by.x = "X1", by.y = "cluster"), Rice_cluster_numOMG, by.x = "X2", by.y = "cluster")
names(extractTable)[1] = "Rice_clusters"
names(extractTable)[2] = "ATH_clusters"
names(extractTable)[3] = "comOMG"
extractTable <- extractTable[, c("ATH_clusters", "ATH_numOMG", "Rice_clusters", "Rice_numOMG", "comOMG", "FDR", "test")] %>% arrange(FDR)
extractTable
#write.csv(extractTable, "/Users/tranchau/Documents/SC_crossSpecies/092522_allSteps/120423_Submission/Figure1/Data/extractTabe_ATH_Rice.csv")
# Finish here for one comparison
adjusted_pvalue_dataframe$rownames = rownames(adjusted_pvalue_dataframe)
df_adjust_pvalue = melt(adjusted_pvalue_dataframe, id.vars = "rownames")
df1$FDR = df_adjust_pvalue$value
##
Ath_cluster_numOMG = Ath_MG_OG[Ath_MG_OG$cluster %in% c("Xylem", "Cortex",  "Hair1", "Hair2",
"Nonhair1", "Nonhair2", "Endodermis",
"Phloem","Stele1", "Stele2", "Endocortex"),] %>%
group_by(cluster) %>%
summarize(Species_x_numOMG = n_distinct(Orthogroup))
Rice_cluster_numOMG = Oryza_MG_OG[Oryza_MG_OG$cluster %in%  c("Xylem", "Cortex", "Cortex_like", "Hair1",
"Hair2", "Nonhair",  "Endodermis",
"Meristem", "Phloem", "Stele"), ] %>%
group_by(cluster) %>%
summarize(Species_y_numOMG = n_distinct(Orthogroup))
##
extractTable = merge(merge(df1, Ath_cluster_numOMG, by.x = "X1", by.y = "cluster"), Rice_cluster_numOMG, by.x = "X2", by.y = "cluster")
names(extractTable)[1] = "Species_y_clusters"
names(extractTable)[2] = "Species_x_clusters"
names(extractTable)[3] = "comOMG"
extractTable <- extractTable[, c("Species_x_clusters", "Species_x_numOMG", "Species_y_clusters", "Species_y_numOMG", "comOMG", "FDR", "test")] %>% arrange(FDR)
extractTable
#write.csv(extractTable, "/Users/tranchau/Documents/SC_crossSpecies/092522_allSteps/120423_Submission/Figure1/Data/extractTabe_ATH_Rice.csv")
# Finish here for one comparison
adjusted_pvalue_dataframe$rownames = rownames(adjusted_pvalue_dataframe)
df_adjust_pvalue = melt(adjusted_pvalue_dataframe, id.vars = "rownames")
df1$FDR = df_adjust_pvalue$value
##
Ath_cluster_numOMG = Ath_MG_OG[Ath_MG_OG$cluster %in% c("Xylem", "Cortex",  "Hair1", "Hair2",
"Nonhair1", "Nonhair2", "Endodermis",
"Phloem","Stele1", "Stele2", "Endocortex"),] %>%
group_by(cluster) %>%
summarize(ATH_numOMG = n_distinct(Orthogroup))
Rice_cluster_numOMG = Oryza_MG_OG[Oryza_MG_OG$cluster %in%  c("Xylem", "Cortex", "Cortex_like", "Hair1",
"Hair2", "Nonhair",  "Endodermis",
"Meristem", "Phloem", "Stele"), ] %>%
group_by(cluster) %>%
summarize(Rice_numOMG = n_distinct(Orthogroup))
##
extractTable = merge(merge(df1, Ath_cluster_numOMG, by.x = "X1", by.y = "cluster"), Rice_cluster_numOMG, by.x = "X2", by.y = "cluster")
names(extractTable)[1] = "Rice_clusters"
names(extractTable)[2] = "ATH_clusters"
names(extractTable)[3] = "comOMG"
extractTable <- extractTable[, c("ATH_clusters", "ATH_numOMG", "Rice_clusters", "Rice_numOMG", "comOMG", "FDR", "test")] %>% arrange(FDR)
extractTable
#write.csv(extractTable, "/Users/tranchau/Documents/SC_crossSpecies/092522_allSteps/120423_Submission/Figure1/Data/extractTabe_ATH_Rice.csv")
# Finish here for one comparison
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
Ath_MG_OG
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
setwd("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups")
# load the orthologous groups which is the output from the orthofinder package
orthofinder = read.csv("/Users/tranchau/Documents/SC_crossSpecies/Webrowser/OMGBrowser/www/input_data/Orthogroups_website.tsv", header = TRUE, sep = "\t") # Unzip the orthogroups.tsv.zip
source("Step2_OrthoFinder/convert_MG_to_OMG.R")
setwd("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups")
# load the orthologous groups which is the output from the orthofinder package
orthofinder = read.csv("/Users/tranchau/Documents/SC_crossSpecies/Webrowser/OMGBrowser/www/input_data/Orthogroups_website.tsv", header = TRUE, sep = "\t") # Unzip the orthogroups.tsv.zip
source("Step2_OrthoFinder/convert_MG_to_OMG.R")
# load the orthologous groups which is the output from the orthofinder package
orthofinder = read.csv("/Users/tranchau/Documents/SC_crossSpecies/Webrowser/OMGBrowser/www/input_data/Orthogroups_website.tsv", header = TRUE, sep = "\t") # Unzip the orthogroups.tsv.zip
source("/Step2_OrthoFinder/convert_MG_to_OMG.R")
setwd("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups")
# load the orthologous groups which is the output from the orthofinder package
orthofinder = read.csv("/Users/tranchau/Documents/SC_crossSpecies/Webrowser/OMGBrowser/www/input_data/Orthogroups_website.tsv", header = TRUE, sep = "\t") # Unzip the orthogroups.tsv.zip
source("/Step2_OrthoFinder/convert_MG_to_OMG.R")
source("./Step2_OrthoFinder/convert_MG_to_OMG.R")
getwd()
setwd("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups")
getwd()
setwd("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups")
getwd()
source("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups/Step2_OrthoFinder/convert_MG_to_OMG.R")
og_ath = clean_OG(orthofinder, "Arabidopsis_thaliana") # EX: Arabidopsis_thaliana
og_oryza = clean_OG(orthofinder, "Oryza_sativa") # EX: Rice (Oryza Sativa)
# load marker genes found in step 1, two examples of Arabidospis and Rice
MG_ara = readRDS("Step1_FindMarkerGenes/MG_120923_ATH_05.RData")
# load marker genes found in step 1, two examples of Arabidospis and Rice
MG_ara = readRDS("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups/Step1_FindMarkerGenes/MG_120923_ATH_05.RData")
MG_oryza = readRDS("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups/Step1_FindMarkerGenes/MG_120923_Rice_05.RData")
# Merge marker gene and OG genes
Ath_MG_OG = merge_MG_OG(MG_ara, og_ath, "Arabidopsis_thaliana")  # EX: Arabidopsis_thaliana
Oryza_MG_OG = merge_MG_OG(MG_oryza, og_oryza, "Oryza_sativa")  # EX: Rice
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups/Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Create the plot with ggplot
plot_ATH_Rice = generate_plot_comparison(df_commonOMGs, "Arabidopsis", "Rice")
plot_ATH_Rice
# Extract table from the heatmap
extract_table(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups/Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Create the plot with ggplot
plot_ATH_Rice = generate_plot_comparison(df_commonOMGs, "Arabidopsis", "Rice")
plot_ATH_Rice
# Extract table from the heatmap
extract_table(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
Ath_MG_OG
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups/Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Create the plot with ggplot
plot_ATH_Rice = generate_plot_comparison(df_commonOMGs, "Arabidopsis", "Rice")
plot_ATH_Rice
# Extract table from the heatmap
extract_table(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, Cortex, Cortex)
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups/Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Create the plot with ggplot
plot_ATH_Rice = generate_plot_comparison(df_commonOMGs, "Arabidopsis", "Rice")
plot_ATH_Rice
# Extract table from the heatmap
extract_table(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups/Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Create the plot with ggplot
plot_ATH_Rice = generate_plot_comparison(df_commonOMGs, "Arabidopsis", "Rice")
plot_ATH_Rice
# Extract table from the heatmap
extract_table(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups/Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Create the plot with ggplot
plot_ATH_Rice = generate_plot_comparison(df_commonOMGs, "Arabidopsis", "Rice")
plot_ATH_Rice
# Extract table from the heatmap
extract_table(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups/Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Create the plot with ggplot
plot_ATH_Rice = generate_plot_comparison(df_commonOMGs, "Arabidopsis", "Rice")
plot_ATH_Rice
# Extract table from the heatmap
extract_table(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups/Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Create the plot with ggplot
plot_ATH_Rice = generate_plot_comparison(df_commonOMGs, "Arabidopsis", "Rice")
plot_ATH_Rice
# Extract table from the heatmap
extract_table(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
# Extract table from the heatmap
extract_table(Ath_MG_OG, Oryza_MG_OG, 0.05)
setwd("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups")
# load the orthologous groups which is the output from the orthofinder package
orthofinder = read.csv("Step2_OrthoFinder/Orthogroups.tsv", header = TRUE, sep = "\t") # Unzip the orthogroups.tsv.zip
# load the orthologous groups which is the output from the orthofinder package
orthofinder = read.csv("/Users/tranchau/Desktop/Desktop/Orthogroups_website.tsv", header = TRUE, sep = "\t") # Unzip the orthogroups.tsv.zip
source("Step2_OrthoFinder/convert_MG_to_OMG.R")
og_ath = clean_OG(orthofinder, "Arabidopsis_thaliana") # EX: Arabidopsis_thaliana
og_oryza = clean_OG(orthofinder, "Oryza_sativa") # EX: Rice (Oryza Sativa)
# load marker genes found in step 1, two examples of Arabidospis and Rice
MG_ara = readRDS("Step1_FindMarkerGenes/MG_120923_ATH_05.RData")
MG_oryza = readRDS("Step1_FindMarkerGenes/MG_120923_Rice_05.RData")
# Merge marker gene and OG genes
Ath_MG_OG = merge_MG_OG(MG_ara, og_ath, "Arabidopsis_thaliana")  # EX: Arabidopsis_thaliana
Oryza_MG_OG = merge_MG_OG(MG_oryza, og_oryza, "Oryza_sativa")  # EX: Rice
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Create the plot with ggplot
plot_ATH_Rice = generate_plot_comparison(df_commonOMGs, "Arabidopsis", "Rice")
plot_ATH_Rice
# Extract table from the heatmap
extract_table(Ath_MG_OG, Oryza_MG_OG, 0.05)
# Extract OMG genes
extract_gene(Ath_MG_OG, Oryza_MG_OG, "Cortex", "Cortex")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups")
# load the orthologous groups which is the output from the orthofinder package
orthofinder = read.csv("/Users/tranchau/Desktop/Desktop/Orthogroups_website.tsv", header = TRUE, sep = "\t") # Unzip the orthogroups.tsv.zip
source("Step2_OrthoFinder/convert_MG_to_OMG.R")
og_ath = clean_OG(orthofinder, "Arabidopsis_thaliana") # EX: Arabidopsis_thaliana
og_tom = clean_OG(orthofinder, "Solanum_lycopersicum") # EX: Tomato (Solanum_lycopersicum)
# load marker genes found in step 1, two examples of Arabidospis and Tomato
MG_ara = readRDS("Step1_FindMarkerGenes/MG_120923_ATH_05.RData")
MG_tom = readRDS("Step1_FindMarkerGenes/MG_082323_Tom_05_Default15clusters.RData")
# Merge marker gene and OG genes
Ath_MG_OG = merge_MG_OG(MG_ara, og_ath, "Arabidopsis_thaliana")  # EX: Arabidopsis_thaliana
Tomato_MG_OG = merge_MG_OG(MG_tom, og_tom, "Solanum_lycopersicum")  # EX: Tomato
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.05)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_comparison(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
# Extract table from the heatmap
extract_table(Ath_MG_OG, Tomato_MG_OG, 0.05)
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.05)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
# Extract table from the heatmap
extract_table(Ath_MG_OG, Tomato_MG_OG, 0.05)
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
# Extract table from the heatmap
extract_table(Ath_MG_OG, Tomato_MG_OG, 0.05)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups") # Make sure the working directory at OrthoMarkerGeneGroups folder
# load the orthologous groups which is the output from the orthofinder package
orthofinder = read.csv("/Users/tranchau/Desktop/Desktop/Orthogroups_website.tsv", header = TRUE, sep = "\t") # Unzip the orthogroups.tsv.zip
source("Step2_OrthoFinder/convert_MG_to_OMG.R")
og_ath = clean_OG(orthofinder, "Arabidopsis_thaliana") # EX: Arabidopsis_thaliana
og_tom = clean_OG(orthofinder, "Solanum_lycopersicum") # EX: Tomato (Solanum_lycopersicum)
# load marker genes found in step 1, two examples of Arabidospis and Tomato
MG_ara = readRDS("Step1_FindMarkerGenes/MG_shoot_marker_ATH_05_050323.RData")
MG_tom = readRDS("Step1_FindMarkerGenes/MG_shoot_marker_Tom_092023.RData")
# Merge marker gene and OG genes
Ath_MG_OG = merge_MG_OG(MG_ara, og_ath, "Arabidopsis_thaliana")  # EX: Arabidopsis_thaliana
Tomato_MG_OG = merge_MG_OG(MG_tom, og_tom, "Solanum_lycopersicum")  # EX: Tomato
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
Tomato_MG_OG
MG_tom
# load the orthologous groups which is the output from the orthofinder package
orthofinder = read.csv("/Users/tranchau/Desktop/Desktop/Orthogroups_website.tsv", header = TRUE, sep = "\t") # Unzip the orthogroups.tsv.zip
source("Step2_OrthoFinder/convert_MG_to_OMG.R")
og_ath = clean_OG(orthofinder, "Arabidopsis_thaliana") # EX: Arabidopsis_thaliana
og_tom = clean_OG(orthofinder, "Solanum_lycopersicum") # EX: Tomato (Solanum_lycopersicum)
# load marker genes found in step 1, two examples of Arabidospis and Tomato
MG_ara = readRDS("Step1_FindMarkerGenes/MG_shoot_marker_ATH_05_050323.RData")
MG_tom = readRDS("Step1_FindMarkerGenes/MG_shoot_marker_Tom_092023.RData")
MG_tom$gene = sub("\\..*", "", MG_tom$gene)
# Merge marker gene and OG genes
Ath_MG_OG = merge_MG_OG(MG_ara, og_ath, "Arabidopsis_thaliana")  # EX: Arabidopsis_thaliana
Tomato_MG_OG = merge_MG_OG(MG_tom, og_tom, "Solanum_lycopersicum")  # EX: Tomato
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
# Extract table from the heatmap
extract_table(Ath_MG_OG, Tomato_MG_OG, 0.01)
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
setwd("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups") # Make sure the working directory at OrthoMarkerGeneGroups folder
setwd("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups") # Make sure the working directory at OrthoMarkerGeneGroups folder
# load the orthologous groups which is the output from the orthofinder package
orthofinder = read.csv("/Users/tranchau/Desktop/Desktop/Orthogroups_website.tsv", header = TRUE, sep = "\t") # Unzip the orthogroups.tsv.zip
source("Step2_OrthoFinder/convert_MG_to_OMG.R")
og_ath = clean_OG(orthofinder, "Arabidopsis_thaliana") # EX: Arabidopsis_thaliana
og_tom = clean_OG(orthofinder, "Solanum_lycopersicum") # EX: Tomato (Solanum_lycopersicum)
# load marker genes found in step 1, two examples of Arabidospis and Tomato
MG_ara = readRDS("Step1_FindMarkerGenes/MG_shoot_marker_ATH_05_050323.RData")
MG_tom = readRDS("Step1_FindMarkerGenes/MG_shoot_marker_Tom_092023.RData")
MG_tom$gene = sub("\\..*", "", MG_tom$gene)
# Merge marker gene and OG genes
Ath_MG_OG = merge_MG_OG(MG_ara, og_ath, "Arabidopsis_thaliana")  # EX: Arabidopsis_thaliana
Tomato_MG_OG = merge_MG_OG(MG_tom, og_tom, "Solanum_lycopersicum")  # EX: Tomato
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
setwd("/Users/tranchau/Documents/VSCode/OrthoMarkerGeneGroups") # Make sure the working directory at OrthoMarkerGeneGroups folder
# load the orthologous groups which is the output from the orthofinder package
orthofinder = read.csv("/Users/tranchau/Desktop/Desktop/Orthogroups_website.tsv", header = TRUE, sep = "\t") # Unzip the orthogroups.tsv.zip
source("Step2_OrthoFinder/convert_MG_to_OMG.R")
og_ath = clean_OG(orthofinder, "Arabidopsis_thaliana") # EX: Arabidopsis_thaliana
og_tom = clean_OG(orthofinder, "Solanum_lycopersicum") # EX: Tomato (Solanum_lycopersicum)
# load marker genes found in step 1, two examples of Arabidospis and Tomato
MG_ara = readRDS("Step1_FindMarkerGenes/MG_shoot_marker_ATH_05_050323.RData")
MG_tom = readRDS("Step1_FindMarkerGenes/MG_shoot_marker_Tom_092023.RData")
MG_tom$gene = sub("\\..*", "", MG_tom$gene)
# Merge marker gene and OG genes
Ath_MG_OG = merge_MG_OG(MG_ara, og_ath, "Arabidopsis_thaliana")  # EX: Arabidopsis_thaliana
Tomato_MG_OG = merge_MG_OG(MG_tom, og_tom, "Solanum_lycopersicum")  # EX: Tomato
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
# Load packages
library(ggplot2); library(reshape); library(hablar)
# Function create table of common OMGs between 2 species
source("Step3_PairwiseComparison/count_comOMGs.R")
df_commonOMGs = test_significant(Ath_MG_OG, Tomato_MG_OG, 0.01)
# Create the plot with ggplot
plot_ATH_Tomato = generate_plot_prediction(df_commonOMGs, "Arabidopsis", "Tomato")
plot_ATH_Tomato
df_commonOMGs
saveRDS(MG_tom, "Step1_FindMarkerGenes/MG_shoot_marker_Tom_092023.RData")
MG_tom = readRDS("Step1_FindMarkerGenes/MG_shoot_marker_Tom_092023.RData")
MG_tom
